services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-setup:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ "sh", "-c", "sleep 10 && kafka-topics --create --topic novo-pedido-queue --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 || true" ]

  solari_client_db:
    image: mysql:latest
    container_name: solari_client_db
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: senha
      MYSQL_DATABASE: solari_client_db
      MYSQL_USER: user
      MYSQL_PASSWORD: senha
    volumes:
      - solari_client_data:/var/lib/mysql

  solari_product_db:
    image: mysql:latest
    container_name: solari_product_db
    restart: always
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: senha
      MYSQL_DATABASE: solari_product_db
      MYSQL_USER: user
      MYSQL_PASSWORD: senha
    volumes:
      - solari_product_data:/var/lib/mysql

  solari_inventory_db:
    image: mysql:latest
    container_name: solari_inventory_db
    restart: always
    ports:
      - "3309:3306"
    environment:
      MYSQL_ROOT_PASSWORD: senha
      MYSQL_DATABASE: solari_inventory_db
      MYSQL_USER: user
      MYSQL_PASSWORD: senha
    volumes:
      - solari_inventory_data:/var/lib/mysql

  solari_order_db:
    image: mysql:latest
    container_name: solari_order_db
    restart: always
    ports:
      - "3310:3306"
    environment:
      MYSQL_ROOT_PASSWORD: senha
      MYSQL_DATABASE: solari_order_db
      MYSQL_USER: user
      MYSQL_PASSWORD: senha
    volumes:
      - solari_order_data:/var/lib/mysql

  solari_payment_db:
    image: mysql:latest
    container_name: solari_payment_db
    restart: always
    ports:
      - "3312:3306"
    environment:
      MYSQL_ROOT_PASSWORD: senha
      MYSQL_DATABASE: solari_payment_db
      MYSQL_USER: user
      MYSQL_PASSWORD: senha
    volumes:
      - solari_payment_data:/var/lib/mysql
  solari-client-service:
    image: brunaczaramela/solari-client:latest
    container_name: solari_client_service
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://solari_client_db:3306/solari_client_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: senha
    depends_on:
      - solari_client_db
      - kafka
  solari-inventory-service:
    image: brunaczaramela/solari-inventory:latest
    container_name: solari_inventory_service
    restart: always
    ports:
      - "8084:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://solari_inventory_db:3306/solari_inventory_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: senha
    depends_on:
      - solari_inventory_db
      - kafka
  solari-payment-service:
    image: brunaczaramela/solari-payment:latest
    container_name: solari_payment_service
    restart: always
    ports:
      - "8085:8085"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://solari_payment_db:3306/solari_payment_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: senha
    depends_on:
      - solari_payment_db
      - kafka
  solari-product-service:
    image: brunaczaramela/solari-product:latest
    container_name: solari_product_service
    restart: always
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://solari_product_db:3306/solari_product_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: senha
    depends_on:
      - solari_product_db
      - kafka
  solari-order-receiver:
    image: brunaczaramela/solari-order-receiver:latest
    container_name: solari_order_receiver
    restart: always
    ports:
      - "8081:8081"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
  solari-order:
    image: brunaczaramela/solari-order:latest
    container_name: solari_order
    restart: always
    ports:
      - "8082:8082"
    environment:
      DATASOURCE_URL: jdbc:mysql://solari_order_db:3306/solari_order_db
      DATASOURCE_USER: user
      DATASOURCE_PASS: senha
      KAFKA_BASE_SERVER: kafka:9092
      KAFKA_GROUP: my-group
      KAFKA_TOPIC: novo-pedido-queue
      URL_CLIENT: http://solari-client-service:8080/solari/v1/clients/
      URL_PRODUCT: http://solari-product-service:8083/solari/v1/products/
      URL_INVENTORY: http://solari-inventory-service:8084/solari/v1/inventory/
      URL_PAYMENT: http://solari-payment-service:8085/solari/v1/payments
    depends_on:
      - solari_order_db
      - kafka
      - solari-client-service
      - solari-product-service
      - solari-inventory-service
      - solari-payment-service

volumes:
  solari_client_data:
  solari_product_data:
  solari_inventory_data:
  solari_order_data:
  solari_payment_data: